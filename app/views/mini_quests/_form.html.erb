<%= form_for(@mini_quest) do |f| %>
  <% if @mini_quest.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@mini_quest.errors.count, "error") %> prohibited this mini_quest from being saved:</h2>

      <ul>
      <% @mini_quest.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :title %><br>
    <%= f.text_field :title %>
  </div>
  <div class="field">
    <%= f.label :description %><br>
    <div class="wmd-panel">
      <div id="wmd-button-bar"></div>
      <%= f.text_area :description, :class => "wmd-input", :id =>"wmd-input" %>
      <div id="wmd-preview" class="wmd-panel wmd-preview"></div>
    </div>
  </div>
  <div class="field">
    <%= f.label :completed_text %><br>
    <div class="wmd-panel">
      <div id="wmd-button-bar-second"></div>
      <%= f.text_area :completed_text, :class => "wmd-input", :id => "wmd-input-second" %>
      <div id="wmd-preview-second" class="wmd-panel wmd-preview"></div>
  </div>
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>



        <script type="text/javascript">
            (function () {
                var converter1 = Markdown.getSanitizingConverter();

                converter1.hooks.chain("preBlockGamut", function (text, rbg) {
                    return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
                        return "<blockquote>" + rbg(inner) + "</blockquote>\n";
                    });
                });

                var editor1 = new Markdown.Editor(converter1);

                editor1.run();

                var converter2 = new Markdown.Converter();

                converter2.hooks.chain("preConversion", function (text) {
                    return text.replace(/\b(a\w*)/gi, "*$1*");
                });

                converter2.hooks.chain("plainLinkText", function (url) {
                    return "This is a link to " + url.replace(/^https?:\/\//, "");
                });

                var help = function () { alert("Do you need help?"); }
                var options = {
                    helpButton: { handler: help },
                    strings: { quoteexample: "whatever you're quoting, put it right here" }
                };
                var editor2 = new Markdown.Editor(converter2, "-second", options);

                editor2.run();
            })();
        </script>
